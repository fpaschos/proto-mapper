name: Publish

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PROTOC_VERSION: 3.20.3

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        toolchain: [ stable ]
    steps:
    - uses: actions/checkout@v3
    - name: Install toolchain (${{ matrix.toolchain }})
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}

    - name: Login to crates.io
      run: cargo login $CRATES_IO_TOKEN
      env:
        CRATES_IO_TOKEN: ${{ secrets.crates_io_token }}

    - name: Dry run publish proto-mapper-core
      run: cargo publish --dry-run --manifest-path Cargo.toml -p proto-mapper-core --features protobuf

    - name: Publish crate proto-mapper-core
      run: cargo publish --manifest-path Cargo.toml -p proto-mapper-core --features protobuf
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.crates_io_token }}

    - name: Dry run publish proto-mapper-derive
      run: cargo publish --dry-run --manifest-path Cargo.toml -p proto-mapper-derive --features protobuf

    - name: Publish crate proto-mapper-derive
      run: cargo publish --manifest-path Cargo.toml -p proto-mapper-derive --features protobuf
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.crates_io_token }}

    ## TODO conditional build.rs for feature protobuf and prost

    - name: Dry run publish proto-mapper
      run: cargo publish --no-verify --dry-run --manifest-path Cargo.toml -p proto-mapper

    - name: Publish crate proto-mapper
      run: cargo publish --no-verify --manifest-path Cargo.toml -p proto-mapper
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.crates_io_token }}